syntax = "proto3";

package me.williamhester.kdash.enduranceweb;

import "google/protobuf/timestamp.proto";

option java_package = "me.williamhester.kdash.enduranceweb.proto";
option java_multiple_files = true;

service LiveTelemetryService {
   rpc MonitorDriverLaps(ConnectRequest) returns (stream LapEntry);

   rpc MonitorOtherCarsLaps(ConnectRequest) returns (stream OtherCarLapEntry);

   rpc MonitorCurrentGaps(ConnectRequest) returns (stream Gaps);

   rpc MonitorCurrentDrivers(ConnectRequest) returns (stream CurrentDrivers);

   rpc MonitorDriverDistances(ConnectRequest) returns (stream DriverDistances);
}

message ConnectRequest {}

message LapEntry {
   int32 lap_num = 1;
   string driver_name = 2;
   int32 position = 3;
   double lap_time = 4;
   double gap_to_leader = 5;
   float fuel_remaining = 6;
   float fuel_used = 7;
   float track_temp = 8;
   int32 driver_incidents = 9;
   int32 team_incidents = 10;
   float optional_repairs_remaining = 11;
   float repairs_remaining = 12;
   bool pit_in = 13;
   bool pit_out = 14;
   double pit_time = 15;
   float max_speed = 16;
}

message OtherCarLapEntry {
   int32 car_id = 1;
   int32 lap_num = 2;
   string driver_name = 3;
   int32 position = 4;
   double lap_time = 5;
   double gap_to_leader = 6;
   float track_temp = 7;
   bool pit_in = 8;
   bool pit_out = 9;
   double pit_time = 10;
}

message Gaps {
   repeated Gap gaps = 1;
}

message Gap {
   int32 car_id = 1;
   double gap = 2;
}

message CurrentDrivers {
   repeated Driver drivers = 1;
}

message Driver {
   int32 car_id = 1;
   int32 car_number = 2;
   int32 car_class_id = 3;
   string car_class_name = 4;
   string driver_name = 5;
   string team_name = 6;
}

message DriverDistances {
   float session_time = 1;
   repeated DriverDistance distances = 2;
}

message DriverDistance {
   int32 car_id = 1;
   float driver_distance = 2;
}
