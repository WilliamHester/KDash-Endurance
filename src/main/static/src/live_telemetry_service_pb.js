// source: live_telemetry_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.ConnectRequest', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.LapEntry', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.ConnectRequest.displayName = 'proto.me.williamhester.kdash.enduranceweb.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.LapEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.LapEntry.displayName = 'proto.me.williamhester.kdash.enduranceweb.LapEntry';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.ConnectRequest;
  return proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.LapEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    lapNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    driverName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    position: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lapTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    gapToLeader: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    fuelRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    fuelUsed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    trackTemp: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    driverIncidents: jspb.Message.getFieldWithDefault(msg, 9, 0),
    teamIncidents: jspb.Message.getFieldWithDefault(msg, 10, 0),
    optionalRepairsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    repairsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    pitIn: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    pitOut: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    pitTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.LapEntry;
  return proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLapNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLapTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGapToLeader(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelRemaining(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelUsed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrackTemp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDriverIncidents(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamIncidents(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOptionalRepairsRemaining(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRepairsRemaining(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitIn(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitOut(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.LapEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLapNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDriverName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLapTime();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getGapToLeader();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFuelRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getFuelUsed();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getTrackTemp();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDriverIncidents();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTeamIncidents();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getOptionalRepairsRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getRepairsRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getPitIn();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPitOut();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPitTime();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
};


/**
 * optional int32 lap_num = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getLapNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setLapNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string driver_name = 2;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setDriverName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 position = 3;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double lap_time = 4;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getLapTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setLapTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double gap_to_leader = 5;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getGapToLeader = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setGapToLeader = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float fuel_remaining = 6;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getFuelRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setFuelRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float fuel_used = 7;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getFuelUsed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setFuelUsed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float track_temp = 8;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getTrackTemp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setTrackTemp = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int32 driver_incidents = 9;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getDriverIncidents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setDriverIncidents = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 team_incidents = 10;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getTeamIncidents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setTeamIncidents = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional float optional_repairs_remaining = 11;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getOptionalRepairsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setOptionalRepairsRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float repairs_remaining = 12;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getRepairsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setRepairsRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional bool pit_in = 13;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool pit_out = 14;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional double pit_time = 15;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


goog.object.extend(exports, proto.me.williamhester.kdash.enduranceweb);
