// source: live_telemetry_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.ConnectRequest', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.CurrentDrivers', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.Driver', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.DriverDistance', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.DriverDistances', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.Gap', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.Gaps', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.LapEntry', null, global);
goog.exportSymbol('proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.ConnectRequest.displayName = 'proto.me.williamhester.kdash.enduranceweb.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.LapEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.LapEntry.displayName = 'proto.me.williamhester.kdash.enduranceweb.LapEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.displayName = 'proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.Gaps = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.me.williamhester.kdash.enduranceweb.Gaps.repeatedFields_, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.Gaps, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.Gaps.displayName = 'proto.me.williamhester.kdash.enduranceweb.Gaps';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.Gap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.Gap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.Gap.displayName = 'proto.me.williamhester.kdash.enduranceweb.Gap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.repeatedFields_, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.CurrentDrivers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.displayName = 'proto.me.williamhester.kdash.enduranceweb.CurrentDrivers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.Driver = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.Driver, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.Driver.displayName = 'proto.me.williamhester.kdash.enduranceweb.Driver';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.me.williamhester.kdash.enduranceweb.DriverDistances.repeatedFields_, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.DriverDistances, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.DriverDistances.displayName = 'proto.me.williamhester.kdash.enduranceweb.DriverDistances';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.me.williamhester.kdash.enduranceweb.DriverDistance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.me.williamhester.kdash.enduranceweb.DriverDistance.displayName = 'proto.me.williamhester.kdash.enduranceweb.DriverDistance';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.ConnectRequest;
  return proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.LapEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    lapNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    driverName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    position: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lapTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    gapToLeader: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    fuelRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    fuelUsed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    trackTemp: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    driverIncidents: jspb.Message.getFieldWithDefault(msg, 9, 0),
    teamIncidents: jspb.Message.getFieldWithDefault(msg, 10, 0),
    optionalRepairsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    repairsRemaining: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    pitIn: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    pitOut: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    pitTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.LapEntry;
  return proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLapNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLapTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGapToLeader(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelRemaining(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFuelUsed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrackTemp(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDriverIncidents(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamIncidents(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOptionalRepairsRemaining(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRepairsRemaining(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitIn(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitOut(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.LapEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.LapEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLapNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDriverName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLapTime();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getGapToLeader();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFuelRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getFuelUsed();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getTrackTemp();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getDriverIncidents();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTeamIncidents();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getOptionalRepairsRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getRepairsRemaining();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getPitIn();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPitOut();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPitTime();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
};


/**
 * optional int32 lap_num = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getLapNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setLapNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string driver_name = 2;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setDriverName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 position = 3;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double lap_time = 4;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getLapTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setLapTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double gap_to_leader = 5;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getGapToLeader = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setGapToLeader = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float fuel_remaining = 6;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getFuelRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setFuelRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float fuel_used = 7;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getFuelUsed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setFuelUsed = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float track_temp = 8;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getTrackTemp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setTrackTemp = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional int32 driver_incidents = 9;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getDriverIncidents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setDriverIncidents = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 team_incidents = 10;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getTeamIncidents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setTeamIncidents = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional float optional_repairs_remaining = 11;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getOptionalRepairsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setOptionalRepairsRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float repairs_remaining = 12;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getRepairsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setRepairsRemaining = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional bool pit_in = 13;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool pit_out = 14;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional double pit_time = 15;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.getPitTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.LapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.LapEntry.prototype.setPitTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    carId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lapNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    driverName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    position: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lapTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    gapToLeader: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    trackTemp: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    pitIn: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    pitOut: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    pitTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry;
  return proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLapNum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPosition(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLapTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGapToLeader(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTrackTemp(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitIn(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPitOut(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPitTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLapNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDriverName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLapTime();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getGapToLeader();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getTrackTemp();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getPitIn();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPitOut();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPitTime();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional int32 car_id = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getCarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setCarId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 lap_num = 2;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getLapNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setLapNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string driver_name = 3;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setDriverName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 position = 4;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double lap_time = 5;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getLapTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setLapTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double gap_to_leader = 6;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getGapToLeader = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setGapToLeader = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float track_temp = 7;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getTrackTemp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setTrackTemp = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool pit_in = 8;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getPitIn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setPitIn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool pit_out = 9;
 * @return {boolean}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getPitOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setPitOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional double pit_time = 10;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.getPitTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry} returns this
 */
proto.me.williamhester.kdash.enduranceweb.OtherCarLapEntry.prototype.setPitTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.Gaps.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gaps} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.toObject = function(includeInstance, msg) {
  var f, obj = {
    gapsList: jspb.Message.toObjectList(msg.getGapsList(),
    proto.me.williamhester.kdash.enduranceweb.Gap.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gaps}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.Gaps;
  return proto.me.williamhester.kdash.enduranceweb.Gaps.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gaps} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gaps}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.me.williamhester.kdash.enduranceweb.Gap;
      reader.readMessage(value,proto.me.williamhester.kdash.enduranceweb.Gap.deserializeBinaryFromReader);
      msg.addGaps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.Gaps.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gaps} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGapsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.me.williamhester.kdash.enduranceweb.Gap.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Gap gaps = 1;
 * @return {!Array<!proto.me.williamhester.kdash.enduranceweb.Gap>}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.getGapsList = function() {
  return /** @type{!Array<!proto.me.williamhester.kdash.enduranceweb.Gap>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.me.williamhester.kdash.enduranceweb.Gap, 1));
};


/**
 * @param {!Array<!proto.me.williamhester.kdash.enduranceweb.Gap>} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gaps} returns this
*/
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.setGapsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gap=} opt_value
 * @param {number=} opt_index
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gap}
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.addGaps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.me.williamhester.kdash.enduranceweb.Gap, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gaps} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Gaps.prototype.clearGapsList = function() {
  return this.setGapsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.Gap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Gap.toObject = function(includeInstance, msg) {
  var f, obj = {
    carId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gap: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gap}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.Gap;
  return proto.me.williamhester.kdash.enduranceweb.Gap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gap}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.Gap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Gap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Gap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGap();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int32 car_id = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.getCarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gap} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.setCarId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double gap = 2;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.getGap = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Gap} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Gap.prototype.setGap = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.toObject = function(includeInstance, msg) {
  var f, obj = {
    driversList: jspb.Message.toObjectList(msg.getDriversList(),
    proto.me.williamhester.kdash.enduranceweb.Driver.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.CurrentDrivers;
  return proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.me.williamhester.kdash.enduranceweb.Driver;
      reader.readMessage(value,proto.me.williamhester.kdash.enduranceweb.Driver.deserializeBinaryFromReader);
      msg.addDrivers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDriversList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.me.williamhester.kdash.enduranceweb.Driver.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Driver drivers = 1;
 * @return {!Array<!proto.me.williamhester.kdash.enduranceweb.Driver>}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.getDriversList = function() {
  return /** @type{!Array<!proto.me.williamhester.kdash.enduranceweb.Driver>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.me.williamhester.kdash.enduranceweb.Driver, 1));
};


/**
 * @param {!Array<!proto.me.williamhester.kdash.enduranceweb.Driver>} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers} returns this
*/
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.setDriversList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.me.williamhester.kdash.enduranceweb.Driver=} opt_value
 * @param {number=} opt_index
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver}
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.addDrivers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.me.williamhester.kdash.enduranceweb.Driver, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.me.williamhester.kdash.enduranceweb.CurrentDrivers} returns this
 */
proto.me.williamhester.kdash.enduranceweb.CurrentDrivers.prototype.clearDriversList = function() {
  return this.setDriversList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.Driver.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.Driver} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Driver.toObject = function(includeInstance, msg) {
  var f, obj = {
    carId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    carNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    carClassId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    carClassName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    driverName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    teamName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.Driver;
  return proto.me.williamhester.kdash.enduranceweb.Driver.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Driver} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarClassId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarClassName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDriverName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.Driver.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.Driver} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.Driver.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCarNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCarClassId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCarClassName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDriverName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTeamName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 car_id = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getCarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setCarId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 car_number = 2;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getCarNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setCarNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 car_class_id = 3;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getCarClassId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setCarClassId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string car_class_name = 4;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getCarClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setCarClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string driver_name = 5;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getDriverName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setDriverName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string team_name = 6;
 * @return {string}
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.getTeamName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.Driver} returns this
 */
proto.me.williamhester.kdash.enduranceweb.Driver.prototype.setTeamName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.DriverDistances.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    distancesList: jspb.Message.toObjectList(msg.getDistancesList(),
    proto.me.williamhester.kdash.enduranceweb.DriverDistance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistances}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.DriverDistances;
  return proto.me.williamhester.kdash.enduranceweb.DriverDistances.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistances}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSessionTime(value);
      break;
    case 2:
      var value = new proto.me.williamhester.kdash.enduranceweb.DriverDistance;
      reader.readMessage(value,proto.me.williamhester.kdash.enduranceweb.DriverDistance.deserializeBinaryFromReader);
      msg.addDistances(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.DriverDistances.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionTime();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getDistancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.me.williamhester.kdash.enduranceweb.DriverDistance.serializeBinaryToWriter
    );
  }
};


/**
 * optional float session_time = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.getSessionTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} returns this
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.setSessionTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * repeated DriverDistance distances = 2;
 * @return {!Array<!proto.me.williamhester.kdash.enduranceweb.DriverDistance>}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.getDistancesList = function() {
  return /** @type{!Array<!proto.me.williamhester.kdash.enduranceweb.DriverDistance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.me.williamhester.kdash.enduranceweb.DriverDistance, 2));
};


/**
 * @param {!Array<!proto.me.williamhester.kdash.enduranceweb.DriverDistance>} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} returns this
*/
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.setDistancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistance}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.addDistances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.me.williamhester.kdash.enduranceweb.DriverDistance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistances} returns this
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistances.prototype.clearDistancesList = function() {
  return this.setDistancesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.toObject = function(opt_includeInstance) {
  return proto.me.williamhester.kdash.enduranceweb.DriverDistance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.toObject = function(includeInstance, msg) {
  var f, obj = {
    carId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    driverDistance: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistance}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.me.williamhester.kdash.enduranceweb.DriverDistance;
  return proto.me.williamhester.kdash.enduranceweb.DriverDistance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistance}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDriverDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.me.williamhester.kdash.enduranceweb.DriverDistance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.me.williamhester.kdash.enduranceweb.DriverDistance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDriverDistance();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional int32 car_id = 1;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.getCarId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistance} returns this
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.setCarId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float driver_distance = 2;
 * @return {number}
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.getDriverDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.me.williamhester.kdash.enduranceweb.DriverDistance} returns this
 */
proto.me.williamhester.kdash.enduranceweb.DriverDistance.prototype.setDriverDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.me.williamhester.kdash.enduranceweb);
